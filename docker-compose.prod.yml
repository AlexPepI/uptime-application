services:
  # --- FRONTEND BUILD STAGE ---
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: uptime-client-prod
    env_file:
      - ./client/.env
    networks:
      - mynet

  # --- BACKEND API ---
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    container_name: uptime-api-prod
    env_file:
      - ./api/.env.prod
    depends_on:
      - postgres
    networks:
      - mynet

  # --- DATABASE ---
  postgres:
    image: postgres:15
    container_name: postgres-prod
    restart: always
    environment:
      POSTGRES_DB: uptime
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynet

  gateway:
    image: nginx:alpine
    container_name: gateway
    volumes:
      - ./gateway/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - client
      - backend
    networks:
      - mynet

  certbot-renew:
    image: certbot/certbot
    container_name: certbot-renew
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "certbot renew --webroot -w /var/www/certbot"
      
volumes:
  pgdata:
  certbot-etc:
  certbot-webroot:

networks:
  mynet:
